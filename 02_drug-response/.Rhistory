rename(pval = 1) %>% rownames_to_column("V2"),
apply(tmp %>% select(starts_with("q")), function(x) fisher.test(tmp$mph_effect, x)$estimate[[1]], MARGIN = 2) %>% as.data.frame() %>%
rename(OR = 1) %>% rownames_to_column("V2")),
merge(apply(tmp %>% select(starts_with("q")), function(x) as.data.frame(fisher.test(tmp$mph_effect, x)$conf.int)[1,1], MARGIN = 2) %>% as.data.frame() %>%
rename(confint_min = 1) %>% rownames_to_column("V2"),
apply(tmp %>% select(starts_with("q")), function(x) as.data.frame(fisher.test(tmp$mph_effect, x)$conf.int)[2,1], MARGIN = 2) %>% as.data.frame() %>%
rename(confint_max = 1) %>% rownames_to_column("V2")))
spark.scq <- spark.scq.raw %>% filter(missing_values == 0) %>%
mutate_at(.vars = vars(starts_with("q")), .funs = function(x) ifelse(is.na(x), 0, x)) %>%
mutate_at(.vars = vars(scq.q.dict$question_name[scq.q.dict$yn_flip]), .funs = function(x) ifelse(x == 0, 1, 0)) %>%
rename(IID = subject_sp_id)
################################################################################
# corr w scq
tmp <- inner_join(spark.rm%>%select(IID, mph_effect), spark.scq%>%select(IID, starts_with("corr"), starts_with("q")))%>%filter(q01_phrases==1)
################################################################################
# corr w scq
tmp <- inner_join(spark.rm%>%select(IID, mph_effect), spark.scq%>%select(IID, starts_with("corr"), starts_with("q")))%>%
filter(q01_phrases==1) %>% select(-q01_phrases)
merge(merge(apply(tmp %>% select(starts_with("q")), function(x) fisher.test(tmp$mph_effect, x)$p.value, MARGIN = 2) %>% as.data.frame() %>%
rename(pval = 1) %>% rownames_to_column("V2"),
apply(tmp %>% select(starts_with("q")), function(x) fisher.test(tmp$mph_effect, x)$estimate[[1]], MARGIN = 2) %>% as.data.frame() %>%
rename(OR = 1) %>% rownames_to_column("V2")),
merge(apply(tmp %>% select(starts_with("q")), function(x) as.data.frame(fisher.test(tmp$mph_effect, x)$conf.int)[1,1], MARGIN = 2) %>% as.data.frame() %>%
rename(confint_min = 1) %>% rownames_to_column("V2"),
apply(tmp %>% select(starts_with("q")), function(x) as.data.frame(fisher.test(tmp$mph_effect, x)$conf.int)[2,1], MARGIN = 2) %>% as.data.frame() %>%
rename(confint_max = 1) %>% rownames_to_column("V2"))) %>%
mutate(V1 = "mph_effect") %>%
mutate(sig = ifelse(pval<0.05, "pval < 0.05", "pval \u2265 0.05")) %>%
mutate(V2 = as.factor(V2)) %>%
ggplot(aes(x=OR, y = V2)) +
geom_point(aes(alpha = sig),  position = position_dodge(width = 0.6), size =2.5) +
geom_vline(xintercept = 1, linetype = "dashed", size = 0.2, color = "red") +
scale_alpha_manual(values = c(1, 0.5)) +
scale_shape_manual(values = c(1, 2)) +
geom_errorbarh(aes(xmin = confint_min, xmax = confint_max, alpha = sig),
size = 0.8, height = 0, show.legend = F,
position = position_dodge(width = 0.6)) +
scale_color_manual(values = six.colors[1:4]) +
labs(x = "", y="", caption = paste0("n(samples): ", nrow(tmp), "\n",
"odds ratio from Fisher's Exact test"))
corr.table(tmp%>%select(mph_effect), tmp%>%select(starts_with("q")))
corr.table(tmp%>%select(mph_effect), tmp%>%select(starts_with("q"))) %>%
filter(V1 == "mph_effect", V2 !=V1) %>%
ggplot(aes(x=V1, y=V2, fill=r, label=ifelse(pval<0.05, paste0("r: ", round(r, 4), ",  p: ", round(pval, 4)))))+
geom_tile() +
geom_text(size=3)+
scale_fill_gradient2(low = redblu.col[2], high = redblu.col[1])+
my.guides+labs(x="", y="", caption = paste0("n(samples): ", nrow(tmp)))
corr.table(tmp%>%select(mph_effect), tmp%>%select(starts_with("q"))) %>%
filter(V1 == "mph_effect", V2 !=V1) %>%
ggplot(aes(x=V1, y=V2, fill=r, label=ifelse(pval<0.05, paste0("r: ", round(r, 4), ",  p: ", round(pval, 4)),"")))+
geom_tile() +
geom_text(size=3)+
scale_fill_gradient2(low = redblu.col[2], high = redblu.col[1])+
my.guides+labs(x="", y="", caption = paste0("n(samples): ", nrow(tmp)))
# spark.scq.flipped <- spark.scq.raw %>% filter(missing_values == 0) %>%
#   mutate_at(.vars = vars(starts_with("q")), .funs = function(x) ifelse(is.na(x), 0, x)) %>%
#   mutate_at(.vars = vars(scq.q.dict$question_name[scq.q.dict$yn_flip]), .funs = function(x) ifelse(x == 0, 1, 0)) %>%
#   rename(IID = subject_sp_id)
spark.scq <- spark.scq.raw %>% filter(missing_values == 0) %>%
mutate_at(.vars = vars(starts_with("q")), .funs = function(x) ifelse(is.na(x), 0, x)) %>%
rename(IID = subject_sp_id)
################################################################################
# corr w scq
tmp <- inner_join(spark.rm%>%select(IID, mph_effect), spark.scq%>%select(IID, starts_with("corr"), starts_with("q")))%>%
filter(q01_phrases==1) %>% select(-q01_phrases)
merge(merge(apply(tmp %>% select(starts_with("q")), function(x) fisher.test(tmp$mph_effect, x)$p.value, MARGIN = 2) %>% as.data.frame() %>%
rename(pval = 1) %>% rownames_to_column("V2"),
apply(tmp %>% select(starts_with("q")), function(x) fisher.test(tmp$mph_effect, x)$estimate[[1]], MARGIN = 2) %>% as.data.frame() %>%
rename(OR = 1) %>% rownames_to_column("V2")),
merge(apply(tmp %>% select(starts_with("q")), function(x) as.data.frame(fisher.test(tmp$mph_effect, x)$conf.int)[1,1], MARGIN = 2) %>% as.data.frame() %>%
rename(confint_min = 1) %>% rownames_to_column("V2"),
apply(tmp %>% select(starts_with("q")), function(x) as.data.frame(fisher.test(tmp$mph_effect, x)$conf.int)[2,1], MARGIN = 2) %>% as.data.frame() %>%
rename(confint_max = 1) %>% rownames_to_column("V2"))) %>%
mutate(V1 = "mph_effect") %>%
mutate(sig = ifelse(pval<0.05, "pval < 0.05", "pval \u2265 0.05")) %>%
mutate(V2 = as.factor(V2)) %>%
ggplot(aes(x=OR, y = V2)) +
geom_point(aes(alpha = sig),  position = position_dodge(width = 0.6), size =2.5) +
geom_vline(xintercept = 1, linetype = "dashed", size = 0.2, color = "red") +
scale_alpha_manual(values = c(1, 0.5)) +
scale_shape_manual(values = c(1, 2)) +
geom_errorbarh(aes(xmin = confint_min, xmax = confint_max, alpha = sig),
size = 0.8, height = 0, show.legend = F,
position = position_dodge(width = 0.6)) +
scale_color_manual(values = six.colors[1:4]) +
labs(x = "", y="", caption = paste0("n(samples): ", nrow(tmp), "\n",
"odds ratio from Fisher's Exact test"))
tmp <- inner_join(spark.rm%>%select(IID, mph_effect), spark.scq%>%select(IID, starts_with("corr"), starts_with("q")))
merge(merge(apply(tmp %>% select(starts_with("q")), function(x) fisher.test(tmp$mph_effect, x)$p.value, MARGIN = 2) %>% as.data.frame() %>%
rename(pval = 1) %>% rownames_to_column("V2"),
apply(tmp %>% select(starts_with("q")), function(x) fisher.test(tmp$mph_effect, x)$estimate[[1]], MARGIN = 2) %>% as.data.frame() %>%
rename(OR = 1) %>% rownames_to_column("V2")),
merge(apply(tmp %>% select(starts_with("q")), function(x) as.data.frame(fisher.test(tmp$mph_effect, x)$conf.int)[1,1], MARGIN = 2) %>% as.data.frame() %>%
rename(confint_min = 1) %>% rownames_to_column("V2"),
apply(tmp %>% select(starts_with("q")), function(x) as.data.frame(fisher.test(tmp$mph_effect, x)$conf.int)[2,1], MARGIN = 2) %>% as.data.frame() %>%
rename(confint_max = 1) %>% rownames_to_column("V2"))) %>%
mutate(V1 = "mph_effect") %>%
mutate(sig = ifelse(pval<0.05, "pval < 0.05", "pval \u2265 0.05")) %>%
mutate(V2 = as.factor(V2)) %>%
ggplot(aes(x=OR, y = V2)) +
geom_point(aes(alpha = sig),  position = position_dodge(width = 0.6), size =2.5) +
geom_vline(xintercept = 1, linetype = "dashed", size = 0.2, color = "red") +
scale_alpha_manual(values = c(1, 0.5)) +
scale_shape_manual(values = c(1, 2)) +
geom_errorbarh(aes(xmin = confint_min, xmax = confint_max, alpha = sig),
size = 0.8, height = 0, show.legend = F,
position = position_dodge(width = 0.6)) +
scale_color_manual(values = six.colors[1:4]) +
labs(x = "", y="", caption = paste0("n(samples): ", nrow(tmp), "\n",
"odds ratio from Fisher's Exact test"))
################################################################################
spark.scq.raw <- read_csv(paste0(spark.dir, "/scq_2022-12-12.csv"))
# spark.scq.flipped <- spark.scq.raw %>% filter(missing_values == 0) %>%
#   mutate_at(.vars = vars(starts_with("q")), .funs = function(x) ifelse(is.na(x), 0, x)) %>%
#   mutate_at(.vars = vars(scq.q.dict$question_name[scq.q.dict$yn_flip]), .funs = function(x) ifelse(x == 0, 1, 0)) %>%
#   rename(IID = subject_sp_id)
spark.scq <- spark.scq.raw %>% filter(missing_values == 0) %>%
mutate_at(.vars = vars(starts_with("q")), .funs = function(x) ifelse(is.na(x), 0, x)) %>%
rename(IID = subject_sp_id)
tmp <- inner_join(spark.rm%>%select(IID, mph_effect), spark.scq%>%select(IID, starts_with("corr"), starts_with("q")))
merge(merge(apply(tmp %>% select(starts_with("q")), function(x) fisher.test(tmp$mph_effect, x)$p.value, MARGIN = 2) %>% as.data.frame() %>%
rename(pval = 1) %>% rownames_to_column("V2"),
apply(tmp %>% select(starts_with("q")), function(x) fisher.test(tmp$mph_effect, x)$estimate[[1]], MARGIN = 2) %>% as.data.frame() %>%
rename(OR = 1) %>% rownames_to_column("V2")),
merge(apply(tmp %>% select(starts_with("q")), function(x) as.data.frame(fisher.test(tmp$mph_effect, x)$conf.int)[1,1], MARGIN = 2) %>% as.data.frame() %>%
rename(confint_min = 1) %>% rownames_to_column("V2"),
apply(tmp %>% select(starts_with("q")), function(x) as.data.frame(fisher.test(tmp$mph_effect, x)$conf.int)[2,1], MARGIN = 2) %>% as.data.frame() %>%
rename(confint_max = 1) %>% rownames_to_column("V2"))) %>%
mutate(V1 = "mph_effect") %>%
mutate(sig = ifelse(pval<0.05, "pval < 0.05", "pval \u2265 0.05")) %>%
mutate(V2 = as.factor(V2)) %>%
ggplot(aes(x=OR, y = V2)) +
geom_point(aes(alpha = sig),  position = position_dodge(width = 0.6), size =2.5) +
geom_vline(xintercept = 1, linetype = "dashed", size = 0.2, color = "red") +
scale_alpha_manual(values = c(1, 0.5)) +
scale_shape_manual(values = c(1, 2)) +
geom_errorbarh(aes(xmin = confint_min, xmax = confint_max, alpha = sig),
size = 0.8, height = 0, show.legend = F,
position = position_dodge(width = 0.6)) +
scale_color_manual(values = six.colors[1:4]) +
labs(x = "", y="", caption = paste0("n(samples): ", nrow(tmp), "\n",
"odds ratio from Fisher's Exact test"))
corr.table(tmp%>%select(mph_effect), tmp%>%select(starts_with("q"))) %>%
filter(V1 == "mph_effect", V2 !=V1) %>%
ggplot(aes(x=V1, y=V2, fill=r, label=ifelse(pval<0.05, paste0("r: ", round(r, 4), ",  p: ", round(pval, 4)),"")))+
geom_tile() +
geom_text(size=3)+
scale_fill_gradient2(low = redblu.col[2], high = redblu.col[1])+
my.guides+labs(x="", y="", caption = paste0("n(samples): ", nrow(tmp)))
################################################################################
# check correlation between mph_effect vector and subject communication?
spark.scq <- read_csv("/Dedicated/jmichaelson-sdata/Simons/SPARK/DATA/phenotypes/SPARK_collection_v9_2022-12-12/scq_2022-12-12.csv")
mph.scq <- inner_join(mph.spark, spark.scq%>%rename(IID=subject_sp_id)%>%select(-sex))
################################################################################
spark.scq.raw <- read_csv(paste0(spark.dir, "/scq_2022-12-12.csv"))
################################################################################
#                                 pre-res lookups                              #
################################################################################
rm(list = ls())
gc()
source("/Dedicated/jmichaelson-wdata/msmuhammad/msmuhammad-source.R")
################################################################################
project.dir <- "/Dedicated/jmichaelson-wdata/msmuhammad/projects/drug-response/02_drug-response"
setwd(project.dir)
################################################################################
spark.dir <- "/Dedicated/jmichaelson-sdata/Simons/SPARK/DATA/phenotypes/SPARK_collection_v9_2022-12-12"
################################################################################
spark.scq.raw <- read_csv(paste0(spark.dir, "/scq_2022-12-12.csv"))
#                          subscale = c(rep("reciprocal_social_interaction", 15),
#                                       rep("communication", 12),
#                                       rep("restricted_repetitive_stereotyped_behav", 8),
#                                       rep("NOT", 3))) %>%
#   mutate(question_name = colnames(spark.scq.raw %>% select(starts_with("q")))[readr::parse_number(question_n)]) %>%
#   mutate(yn_flip = ifelse(question_n %in% scq.flip.q, T, F))
# spark.scq.flipped <- spark.scq.raw %>% filter(missing_values == 0) %>%
#   mutate_at(.vars = vars(starts_with("q")), .funs = function(x) ifelse(is.na(x), 0, x)) %>%
#   mutate_at(.vars = vars(scq.q.dict$question_name[scq.q.dict$yn_flip]), .funs = function(x) ifelse(x == 0, 1, 0)) %>%
#   rename(IID = subject_sp_id)
spark.scq <- spark.scq.raw %>% filter(missing_values == 0) %>%
rename(IID = subject_sp_id)
################################################################################
# corr w scq
tmp <- inner_join(spark.rm%>%select(IID, mph_effect), spark.scq%>%select(IID, starts_with("corr"), starts_with("q")))%>%
filter(q01_phrases==1) %>% select(-q01_phrases)
################################################################################
spark.bg.child.raw <- read_csv(paste0(spark.dir, "/background_history_child_2022-12-12.csv"), na = c("888"))
spark.bg.child <- spark.bg.child.raw %>% select(IID = subject_sp_id, contains("age_level")) %>%
drop_na()
################################################################################
spark.iq.raw <- read_csv(paste0(spark.dir, "/predicted_iq_experimental_2022-12-12.csv"))
spark.iq <- spark.iq.raw %>% select(IID = subject_sp_id, derived_cog_impair) %>%
drop_na()
################################################################################
rm.q.dict <- readxl::read_excel("../data/rawdata/spark-rm/data-dict-child_edited.xlsx", sheet = 1)
spark.rm <- read_tsv("../data/rawdata/spark-rm/raw/ChildSurvey20181031.csv", na = c("-666", "-999")) %>%
select(1:8, q102_sq03_alias) %>%
rename(mph_effect = q102_sq03_alias) %>%
filter(! is.na(mph_effect)) %>%
mutate(mph_effect = ifelse(mph_effect == 2, 1, 0)) %>%
rename(IID = ParticipantID)
################################################################################
# corr w scq
tmp <- inner_join(spark.rm%>%select(IID, mph_effect), spark.scq%>%select(IID, starts_with("corr"), starts_with("q")))%>%
filter(q01_phrases==1) %>% select(-q01_phrases)
merge(merge(apply(tmp %>% select(starts_with("q")), function(x) fisher.test(tmp$mph_effect, x)$p.value, MARGIN = 2) %>% as.data.frame() %>%
rename(pval = 1) %>% rownames_to_column("V2"),
apply(tmp %>% select(starts_with("q")), function(x) fisher.test(tmp$mph_effect, x)$estimate[[1]], MARGIN = 2) %>% as.data.frame() %>%
rename(OR = 1) %>% rownames_to_column("V2")),
merge(apply(tmp %>% select(starts_with("q")), function(x) as.data.frame(fisher.test(tmp$mph_effect, x)$conf.int)[1,1], MARGIN = 2) %>% as.data.frame() %>%
rename(confint_min = 1) %>% rownames_to_column("V2"),
apply(tmp %>% select(starts_with("q")), function(x) as.data.frame(fisher.test(tmp$mph_effect, x)$conf.int)[2,1], MARGIN = 2) %>% as.data.frame() %>%
rename(confint_max = 1) %>% rownames_to_column("V2"))) %>%
mutate(V1 = "mph_effect") %>%
mutate(sig = ifelse(pval<0.05, "pval < 0.05", "pval \u2265 0.05")) %>%
mutate(V2 = as.factor(V2)) %>%
ggplot(aes(x=OR, y = V2)) +
geom_point(aes(alpha = sig),  position = position_dodge(width = 0.6), size =2.5) +
geom_vline(xintercept = 1, linetype = "dashed", size = 0.2, color = "red") +
scale_alpha_manual(values = c(1, 0.5)) +
scale_shape_manual(values = c(1, 2)) +
geom_errorbarh(aes(xmin = confint_min, xmax = confint_max, alpha = sig),
size = 0.8, height = 0, show.legend = F,
position = position_dodge(width = 0.6)) +
scale_color_manual(values = six.colors[1:4]) +
labs(x = "", y="", caption = paste0("n(samples): ", nrow(tmp), "\n",
"odds ratio from Fisher's Exact test"))
corr.table(tmp%>%select(mph_effect), tmp%>%select(starts_with("q"))) %>%
filter(V1 == "mph_effect", V2 !=V1) %>%
ggplot(aes(x=V1, y=V2, fill=r, label=ifelse(pval<0.05, paste0("r: ", round(r, 4), ",  p: ", round(pval, 4)),"")))+
geom_tile() +
geom_text(size=3)+
scale_fill_gradient2(low = redblu.col[2], high = redblu.col[1])+
my.guides+labs(x="", y="", caption = paste0("n(samples): ", nrow(tmp)))
View(rm.q.dict)
spark.rm <- read_tsv("../data/rawdata/spark-rm/raw/ChildSurvey20181031.csv", na = c("-666", "-999")) %>%
select(1:8, q102_sq03_alias) %>%
rename(mph_effect = q102_sq03_alias) %>%
filter(! is.na(mph_effect))
View(spark.rm)
spark.rm <- read_tsv("../data/rawdata/spark-rm/raw/ChildSurvey20181031.csv", na = c("-666", "-999")) %>%
select(1:8, q103_sq03_alias) %>%
rename(mph_effect = q103_sq03_alias) %>%
filter(! is.na(mph_effect)) %>%
mutate(mph_effect = ifelse(mph_effect == 2, 1, 0)) %>%
rename(IID = ParticipantID)
################################################################################
# corr w scq
tmp <- inner_join(spark.rm%>%select(IID, mph_effect), spark.scq%>%select(IID, starts_with("corr"), starts_with("q")))%>%
filter(q01_phrases==1) %>% select(-q01_phrases)
merge(merge(apply(tmp %>% select(starts_with("q")), function(x) fisher.test(tmp$mph_effect, x)$p.value, MARGIN = 2) %>% as.data.frame() %>%
rename(pval = 1) %>% rownames_to_column("V2"),
apply(tmp %>% select(starts_with("q")), function(x) fisher.test(tmp$mph_effect, x)$estimate[[1]], MARGIN = 2) %>% as.data.frame() %>%
rename(OR = 1) %>% rownames_to_column("V2")),
merge(apply(tmp %>% select(starts_with("q")), function(x) as.data.frame(fisher.test(tmp$mph_effect, x)$conf.int)[1,1], MARGIN = 2) %>% as.data.frame() %>%
rename(confint_min = 1) %>% rownames_to_column("V2"),
apply(tmp %>% select(starts_with("q")), function(x) as.data.frame(fisher.test(tmp$mph_effect, x)$conf.int)[2,1], MARGIN = 2) %>% as.data.frame() %>%
rename(confint_max = 1) %>% rownames_to_column("V2"))) %>%
mutate(V1 = "mph_effect") %>%
mutate(sig = ifelse(pval<0.05, "pval < 0.05", "pval \u2265 0.05")) %>%
mutate(V2 = as.factor(V2)) %>%
ggplot(aes(x=OR, y = V2)) +
geom_point(aes(alpha = sig),  position = position_dodge(width = 0.6), size =2.5) +
geom_vline(xintercept = 1, linetype = "dashed", size = 0.2, color = "red") +
scale_alpha_manual(values = c(1, 0.5)) +
scale_shape_manual(values = c(1, 2)) +
geom_errorbarh(aes(xmin = confint_min, xmax = confint_max, alpha = sig),
size = 0.8, height = 0, show.legend = F,
position = position_dodge(width = 0.6)) +
scale_color_manual(values = six.colors[1:4]) +
labs(x = "", y="", caption = paste0("n(samples): ", nrow(tmp), "\n",
"odds ratio from Fisher's Exact test"))
corr.table(tmp%>%select(mph_effect), tmp%>%select(starts_with("q"))) %>%
filter(V1 == "mph_effect", V2 !=V1) %>%
ggplot(aes(x=V1, y=V2, fill=r, label=ifelse(pval<0.05, paste0("r: ", round(r, 4), ",  p: ", round(pval, 4)),"")))+
geom_tile() +
geom_text(size=3)+
scale_fill_gradient2(low = redblu.col[2], high = redblu.col[1])+
my.guides+labs(x="", y="", caption = paste0("n(samples): ", nrow(tmp)))
spark.rm <- read_tsv("../data/rawdata/spark-rm/raw/ChildSurvey20181031.csv", na = c("-666", "-999")) %>%
select(1:8, q102_sq03_alias,q102_sq04_alias) %>%
rename(mph_effect = q102_sq03_alias) %>%
filter(! is.na(mph_effect)) %>%
mutate(mph_effect = ifelse(mph_effect == 2, 1, 0)) %>%
rename(IID = ParticipantID)
spark.rm <- read_tsv("../data/rawdata/spark-rm/raw/ChildSurvey20181031.csv", na = c("-666", "-999")) %>%
select(1:8, q102_sq03_alias,q102_sq04_alias) %>%
rename(mph_effect = q102_sq03_alias) %>%
filter(! is.na(mph_effect)) %>%
mutate(mph_effect = ifelse(mph_effect == 2, 0, 1)) %>%
rename(IID = ParticipantID)
#                          subscale = c(rep("reciprocal_social_interaction", 15),
#                                       rep("communication", 12),
#                                       rep("restricted_repetitive_stereotyped_behav", 8),
#                                       rep("NOT", 3))) %>%
#   mutate(question_name = colnames(spark.scq.raw %>% select(starts_with("q")))[readr::parse_number(question_n)]) %>%
#   mutate(yn_flip = ifelse(question_n %in% scq.flip.q, T, F))
# spark.scq.flipped <- spark.scq.raw %>% filter(missing_values == 0) %>%
#   mutate_at(.vars = vars(starts_with("q")), .funs = function(x) ifelse(is.na(x), 0, x)) %>%
#   mutate_at(.vars = vars(scq.q.dict$question_name[scq.q.dict$yn_flip]), .funs = function(x) ifelse(x == 0, 1, 0)) %>%
#   rename(IID = subject_sp_id)
spark.scq <- spark.scq.raw %>% filter(missing_values == 0) %>%
mutate_at(.vars = vars(scq.q.dict$question_name[scq.q.dict$yn_flip]), .funs = function(x) ifelse(x == 0, 1, 0)) %>%
rename(IID = subject_sp_id)
################################################################################
#                                 pre-res lookups                              #
################################################################################
rm(list = ls())
gc()
source("/Dedicated/jmichaelson-wdata/msmuhammad/msmuhammad-source.R")
################################################################################
project.dir <- "/Dedicated/jmichaelson-wdata/msmuhammad/projects/drug-response/02_drug-response"
setwd(project.dir)
################################################################################
spark.dir <- "/Dedicated/jmichaelson-sdata/Simons/SPARK/DATA/phenotypes/SPARK_collection_v9_2022-12-12"
################################################################################
spark.scq.raw <- read_csv(paste0(spark.dir, "/scq_2022-12-12.csv"))
#                          subscale = c(rep("reciprocal_social_interaction", 15),
#                                       rep("communication", 12),
#                                       rep("restricted_repetitive_stereotyped_behav", 8),
#                                       rep("NOT", 3))) %>%
#   mutate(question_name = colnames(spark.scq.raw %>% select(starts_with("q")))[readr::parse_number(question_n)]) %>%
#   mutate(yn_flip = ifelse(question_n %in% scq.flip.q, T, F))
# spark.scq.flipped <- spark.scq.raw %>% filter(missing_values == 0) %>%
#   mutate_at(.vars = vars(starts_with("q")), .funs = function(x) ifelse(is.na(x), 0, x)) %>%
#   mutate_at(.vars = vars(scq.q.dict$question_name[scq.q.dict$yn_flip]), .funs = function(x) ifelse(x == 0, 1, 0)) %>%
#   rename(IID = subject_sp_id)
spark.scq <- spark.scq.raw %>% filter(missing_values == 0) %>%
mutate_at(.vars = vars(starts_with("q")), .funs = function(x) ifelse(is.na(x), 0, x)) %>%
rename(IID = subject_sp_id)
################################################################################
spark.bg.child.raw <- read_csv(paste0(spark.dir, "/background_history_child_2022-12-12.csv"), na = c("888"))
spark.bg.child <- spark.bg.child.raw %>% select(IID = subject_sp_id, contains("age_level")) %>%
drop_na()
################################################################################
spark.iq.raw <- read_csv(paste0(spark.dir, "/predicted_iq_experimental_2022-12-12.csv"))
spark.iq <- spark.iq.raw %>% select(IID = subject_sp_id, derived_cog_impair) %>%
drop_na()
################################################################################
rm.q.dict <- readxl::read_excel("../data/rawdata/spark-rm/data-dict-child_edited.xlsx", sheet = 1)
spark.rm <- read_tsv("../data/rawdata/spark-rm/raw/ChildSurvey20181031.csv", na = c("-666", "-999")) %>%
select(1:8, q102_sq03_alias,q102_sq04_alias) %>%
rename(mph_effect = q102_sq03_alias) %>%
filter(! is.na(mph_effect)) %>%
mutate(mph_effect = ifelse(mph_effect == 2, 0, 1)) %>%
rename(IID = ParticipantID)
################################################################################
# corr w scq
tmp <- inner_join(spark.rm%>%select(IID, mph_effect), spark.scq%>%select(IID, starts_with("corr"), starts_with("q")))%>%
filter(q01_phrases==1) %>% select(-q01_phrases)
merge(merge(apply(tmp %>% select(starts_with("q")), function(x) fisher.test(tmp$mph_effect, x)$p.value, MARGIN = 2) %>% as.data.frame() %>%
rename(pval = 1) %>% rownames_to_column("V2"),
apply(tmp %>% select(starts_with("q")), function(x) fisher.test(tmp$mph_effect, x)$estimate[[1]], MARGIN = 2) %>% as.data.frame() %>%
rename(OR = 1) %>% rownames_to_column("V2")),
merge(apply(tmp %>% select(starts_with("q")), function(x) as.data.frame(fisher.test(tmp$mph_effect, x)$conf.int)[1,1], MARGIN = 2) %>% as.data.frame() %>%
rename(confint_min = 1) %>% rownames_to_column("V2"),
apply(tmp %>% select(starts_with("q")), function(x) as.data.frame(fisher.test(tmp$mph_effect, x)$conf.int)[2,1], MARGIN = 2) %>% as.data.frame() %>%
rename(confint_max = 1) %>% rownames_to_column("V2"))) %>%
mutate(V1 = "mph_effect") %>%
mutate(sig = ifelse(pval<0.05, "pval < 0.05", "pval \u2265 0.05")) %>%
mutate(V2 = as.factor(V2)) %>%
ggplot(aes(x=OR, y = V2)) +
geom_point(aes(alpha = sig),  position = position_dodge(width = 0.6), size =2.5) +
geom_vline(xintercept = 1, linetype = "dashed", size = 0.2, color = "red") +
scale_alpha_manual(values = c(1, 0.5)) +
scale_shape_manual(values = c(1, 2)) +
geom_errorbarh(aes(xmin = confint_min, xmax = confint_max, alpha = sig),
size = 0.8, height = 0, show.legend = F,
position = position_dodge(width = 0.6)) +
scale_color_manual(values = six.colors[1:4]) +
labs(x = "", y="", caption = paste0("n(samples): ", nrow(tmp), "\n",
"odds ratio from Fisher's Exact test"))
################################################################################
# corr w scq
tmp <- inner_join(spark.rm%>%select(IID, mph_effect), spark.scq%>%select(IID, starts_with("corr"), starts_with("q")))
merge(merge(apply(tmp %>% select(starts_with("q")), function(x) fisher.test(tmp$mph_effect, x)$p.value, MARGIN = 2) %>% as.data.frame() %>%
rename(pval = 1) %>% rownames_to_column("V2"),
apply(tmp %>% select(starts_with("q")), function(x) fisher.test(tmp$mph_effect, x)$estimate[[1]], MARGIN = 2) %>% as.data.frame() %>%
rename(OR = 1) %>% rownames_to_column("V2")),
merge(apply(tmp %>% select(starts_with("q")), function(x) as.data.frame(fisher.test(tmp$mph_effect, x)$conf.int)[1,1], MARGIN = 2) %>% as.data.frame() %>%
rename(confint_min = 1) %>% rownames_to_column("V2"),
apply(tmp %>% select(starts_with("q")), function(x) as.data.frame(fisher.test(tmp$mph_effect, x)$conf.int)[2,1], MARGIN = 2) %>% as.data.frame() %>%
rename(confint_max = 1) %>% rownames_to_column("V2"))) %>%
mutate(V1 = "mph_effect") %>%
mutate(sig = ifelse(pval<0.05, "pval < 0.05", "pval \u2265 0.05")) %>%
mutate(V2 = as.factor(V2)) %>%
ggplot(aes(x=OR, y = V2)) +
geom_point(aes(alpha = sig),  position = position_dodge(width = 0.6), size =2.5) +
geom_vline(xintercept = 1, linetype = "dashed", size = 0.2, color = "red") +
scale_alpha_manual(values = c(1, 0.5)) +
scale_shape_manual(values = c(1, 2)) +
geom_errorbarh(aes(xmin = confint_min, xmax = confint_max, alpha = sig),
size = 0.8, height = 0, show.legend = F,
position = position_dodge(width = 0.6)) +
scale_color_manual(values = six.colors[1:4]) +
labs(x = "", y="", caption = paste0("n(samples): ", nrow(tmp), "\n",
"odds ratio from Fisher's Exact test"))
corr.table(tmp%>%select(mph_effect), tmp%>%select(starts_with("q"))) %>%
filter(V1 == "mph_effect", V2 !=V1) %>%
ggplot(aes(x=V1, y=V2, fill=r, label=ifelse(pval<0.05, paste0("r: ", round(r, 4), ",  p: ", round(pval, 4)),"")))+
geom_tile() +
geom_text(size=3)+
scale_fill_gradient2(low = redblu.col[2], high = redblu.col[1])+
my.guides+labs(x="", y="", caption = paste0("n(samples): ", nrow(tmp)))
################################################################################
# corr w scq
tmp <- inner_join(spark.rm%>%select(IID, mph_effect), spark.scq%>%select(IID, starts_with("corr"), starts_with("q"))) %>% filter(q01_phrases==1) %>% select(-c(q01_phrases))
merge(merge(apply(tmp %>% select(starts_with("q")), function(x) fisher.test(tmp$mph_effect, x)$p.value, MARGIN = 2) %>% as.data.frame() %>%
rename(pval = 1) %>% rownames_to_column("V2"),
apply(tmp %>% select(starts_with("q")), function(x) fisher.test(tmp$mph_effect, x)$estimate[[1]], MARGIN = 2) %>% as.data.frame() %>%
rename(OR = 1) %>% rownames_to_column("V2")),
merge(apply(tmp %>% select(starts_with("q")), function(x) as.data.frame(fisher.test(tmp$mph_effect, x)$conf.int)[1,1], MARGIN = 2) %>% as.data.frame() %>%
rename(confint_min = 1) %>% rownames_to_column("V2"),
apply(tmp %>% select(starts_with("q")), function(x) as.data.frame(fisher.test(tmp$mph_effect, x)$conf.int)[2,1], MARGIN = 2) %>% as.data.frame() %>%
rename(confint_max = 1) %>% rownames_to_column("V2"))) %>%
mutate(V1 = "mph_effect") %>%
mutate(sig = ifelse(pval<0.05, "pval < 0.05", "pval \u2265 0.05")) %>%
mutate(V2 = as.factor(V2)) %>%
ggplot(aes(x=OR, y = V2)) +
geom_point(aes(alpha = sig),  position = position_dodge(width = 0.6), size =2.5) +
geom_vline(xintercept = 1, linetype = "dashed", size = 0.2, color = "red") +
scale_alpha_manual(values = c(1, 0.5)) +
scale_shape_manual(values = c(1, 2)) +
geom_errorbarh(aes(xmin = confint_min, xmax = confint_max, alpha = sig),
size = 0.8, height = 0, show.legend = F,
position = position_dodge(width = 0.6)) +
scale_color_manual(values = six.colors[1:4]) +
labs(x = "", y="", caption = paste0("n(samples): ", nrow(tmp), "\n",
"odds ratio from Fisher's Exact test"))
corr.table(tmp%>%select(mph_effect), tmp%>%select(starts_with("q"))) %>%
filter(V1 == "mph_effect", V2 !=V1) %>%
ggplot(aes(x=V1, y=V2, fill=r, label=ifelse(pval<0.05, paste0("r: ", round(r, 4), ",  p: ", round(pval, 4)),"")))+
geom_tile() +
geom_text(size=3)+
scale_fill_gradient2(low = redblu.col[2], high = redblu.col[1])+
my.guides+labs(x="", y="", caption = paste0("n(samples): ", nrow(tmp)))
################################################################################
# corr w bg child
tmp2 <- inner_join(spark.rm%>%select(IID, mph_effect), spark.iq)
View(tmp2)
t<- fisher.test(tmp2$mph_effect, tmp2$derived_cog_impair)
tmp2 %>%
mutate(mph_effect = as.factor(mph_effect), derived_cog_impair = as.factor(derived_cog_impair)) %>%
ggplot(aes(mph_effect, fill=derived_cog_impair))+
geom_bar() +
labs(subtitle = paste0("OR: ", round(t$estimate[[1]],4),
"\n p: ", round(t$p.value,4)))
tmp2 %>%
mutate(mph_effect = as.factor(mph_effect), derived_cog_impair = as.factor(derived_cog_impair)) %>%
ggplot(aes(mph_effect, fill=derived_cog_impair))+
geom_bar() +
labs(subtitle = paste0("OR: ", round(t$estimate[[1]],4),
"\npvalue: ", round(t$p.value,4)))
tmp2 %>%
mutate(mph_effect = as.factor(mph_effect), derived_cog_impair = as.factor(derived_cog_impair)) %>%
ggplot(aes(mph_effect, fill=derived_cog_impair))+
geom_bar() +
labs(subtitle = paste0("Fisher's Exact test",
"OR: ", round(t$estimate[[1]],4),
"\npvalue: ", round(t$p.value,4)))
tmp2 %>%
mutate(mph_effect = as.factor(mph_effect), derived_cog_impair = as.factor(derived_cog_impair)) %>%
ggplot(aes(mph_effect, fill=derived_cog_impair))+
geom_bar() +
labs(subtitle = paste0("Fisher's Exact test", "\n",
"OR: ", round(t$estimate[[1]],4),
"\npvalue: ", round(t$p.value,4)))
tmp2 %>%
mutate(mph_effect = as.factor(mph_effect), derived_cog_impair = as.factor(derived_cog_impair)) %>%
ggplot(aes(mph_effect, fill=derived_cog_impair))+
geom_bar() +
scale_fill_manual(values = boxplot.colors)+
labs(subtitle = paste0("Fisher's Exact test", "\n",
"OR: ", round(t$estimate[[1]],4),
"\npvalue: ", round(t$p.value,4)))
################################################################################
tmp3 <- inner_join(spark.rm%>%select(IID, mph_effect), spark.bg.child)
m <- lm(mph_effect ~ ., data = tmp3%>%select(-IID))
summary(m)$coefficients %>% as.data.frame() %>%
rownames_to_column("var") %>% filter(var != "(Intercept)") %>%
mutate(confint_min = confint(m)[-1,1], confint_max = confint(m)[-1,2]) %>%
mutate(sig = ifelse(`Pr(>|t|)`<0.05, "pval < 0.05", "pval \u2265 0.05")) %>%
ggplot(aes(x=Estimate, y = var), color = var) +
geom_point(aes(alpha = sig),  position = position_dodge(width = 0.6), size =2.5) +
geom_vline(xintercept = 0, linetype = "dashed", size = 0.2, color = "red") +
scale_alpha_manual(values = c(1, 0.5)) +
scale_shape_manual(values = c(1, 2)) +
geom_errorbarh(aes(xmin = confint_min, xmax = confint_max,alpha = sig),
size = 0.8, height = 0, show.legend = F,
position = position_dodge(width = 0.6)) +
# scale_color_manual(values = six.colors[1:4]) +
my.guides+labs(x ="Estimate", y="",
title = "predicting MPH_effect by cog/function/language age level",
caption = paste0("lm(mph_effect ~ cog_age_level + langcog_age_level + functioncog_age_level)"))
################################################################################
# corr w predicted mph response
spark.tt.pred <- read_rds("../data/derivatives/m-outputs/spark/mph-samples/model-celltype-all-FALSE-TRUE-1.rds")
tmp4 <- inner_join(spark.rm%>%select(IID, mph_effect), spark.tt.pred)
cor.test(tmp4$mph_effect, tmp4$m)
################################################################################
# corr w pgs
spark.pgs <- read_tsv("../data/derivatives/spark-abcd-corrected-pgs.tsv")
tmp5 <- inner_join(spark.rm%>%select(IID, mph_effect), spark.pgs)
View(tmp5)
corr.table(tmp5%>%select(mph_effect), tmp5%>%select(starts_with("corrected"))) %>%
filter(V1 == "mph_effect", V2 !=V1) %>%
mutate(V2 = sub("corrected_", "", V2)) %>%
ggplot(aes(x=V1, y=V2, fill=r, label=ifelse(pval<0.05, paste0("r: ", round(r, 4), ",  p: ", round(pval, 4)),"")))+
geom_tile() +
geom_text(size=3)+
scale_fill_gradient2(low = redblu.col[2], high = redblu.col[1])+
my.guides+labs(x="", y="", caption = paste0("n(samples): ", nrow(tmp)))
